<!--
     The FreeBSD Documentation Project

     $FreeBSD: doc/pl_PL.ISO8859-2/books/handbook/virtualization/chapter.sgml,v 1.1 2007/05/19 20:30:04 therek Exp $
-->

<chapter id="virtualization">
  <chapterinfo>
    <authorgroup>
      <author>
        <firstname>Murray</firstname>
	<surname>Stokely</surname>
	<contrib>Contributed by </contrib>
      </author>
    </authorgroup>
    <!-- Mar 2007 -->
  </chapterinfo>

  <title>Virtualization</title>
  
  <sect1 id="virtualization-synopsis">
    <title>Synopsis</title>
    
    <para>Virtualization software allows multiple operating systems
      to run simultaneously on the same computer.  Such software
      systems for PCs often involve a host operating system which runs
      the virtualization software and supports any number of guest
      operating systems.</para>
    
    <para>After reading this chapter, you will know:</para>

    <itemizedlist>
      <listitem>
	<para>The difference between a host operating system and a
	  guest operating system.</para>
      </listitem>

      <listitem>
	<para>How to install FreeBSD on Linux with <application>&xen;</application>.</para>
      </listitem>

      <listitem>
	<para>How to install FreeBSD on an &intel;-based &apple; &macintosh;
	  computer.</para>
      </listitem>

      <listitem>
	<para>How to tune a FreeBSD system for best performance under
	  virtualization.</para>
      </listitem>

    </itemizedlist>

    <para>Before reading this chapter, you should:</para>

    <itemizedlist>
      <listitem>
	<para>Understand the basics of &unix; and FreeBSD (<xref
	    linkend="basics">).</para>
      </listitem>

      <listitem><para>Know how to install FreeBSD (<xref
      linkend="install">).</para></listitem>

      <listitem><para>Know how to set up your network connection (<xref
      linkend="advanced-networking">).</para></listitem>

      <listitem><para>Know how to install additional third-party
        software (<xref linkend="ports">).</para></listitem>
    </itemizedlist>

  </sect1>



  <sect1 id="virtualization-guest">
    <title>FreeBSD as a Guest OS</title>

    <sect2 id="virtualization-guest-parallels">
      <title>Parallels on MacOS</title>

      <para><application>Parallels Desktop</application> for &mac; is a
	commercial software product available for &intel; based &apple;
	&mac; computers running &macos; 10.4.6 or higher.  FreeBSD is a
	fully supported guest operating system.
	Once <application>Parallels</application> has been installed on &macos;
        X, the user must configure a virtual machine and then install
        the desired guest operating system.</para>

	<sect3 id="virtualization-guest-parallels-install">
	  <title>Installing FreeBSD on Parallels/&macos; X</title>

	  <para>The first step in installing FreeBSD on &macos;
	    X/<application>Parallels</application> is to create a new virtual
	    machine for installing FreeBSD.  Select <guimenuitem>FreeBSD</guimenuitem>
	    as the <guimenu>Guest OS Type</guimenu> when prompted:</para>

	  <mediaobject>
            <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd1">
            </imageobject>
          </mediaobject>

	  <para>And choose a reasonable amount of disk and
	    memory depending on your plans for this virtual FreeBSD
	    instance.  4GB and 512MB of RAM work well for most uses of
	    FreeBSD under <application>Parallels</application>:</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd2">
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd3">
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd4">
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd5">
	    </imageobject>
	  </mediaobject>

	  <para>Select the type of networking and a network
	    interface:</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd6">
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd7">
	    </imageobject>
	  </mediaobject>

	  <para>Save and finish the configuration:</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd8">
	    </imageobject>
	  </mediaobject>

	  <mediaobject>
            <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd9">
            </imageobject>
          </mediaobject>

	  <para>After your FreeBSD virtual machine has been created,
	    you will need to install FreeBSD on it.  This is best done
	    with an official FreeBSD CDROM or with an ISO image
	    downloaded from an official FTP site.  When you have the
	    appropriate ISO image on your local &mac; filesystem or a
	    CDROM in your &mac;'s CD drive, click on the disc icon in the
	    bottom right corner of your FreeBSD
	    <application>Parallels</application> window.  This
	    will bring up a window that allows you to associate the
	    CDROM drive in your virtual machine with an ISO file on
	    disk or with your real CDROM drive.</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd11">
	    </imageobject>
	  </mediaobject>

	  <para>Once you have made this association with your CDROM
	    source, reboot your FreeBSD virtual machine as normal by
	    clicking the reboot icon.
	    <application>Parallels</application> will reboot with a
	    special BIOS that first checks if you have a CDROM just as a
	    normal BIOS would do.</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd10">
	    </imageobject>
	  </mediaobject>

	  <para>In this case it will find the FreeBSD installation media
	    and begin a normal <application>sysinstall</application> based
	    installation as described in <xref linkend="install">.  You
	    may install, but do not attempt to configure X11 at
	    this time.</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd12">
	    </imageobject>
	  </mediaobject>

	  <para>When you have finished the installation, reboot
	    into your newly installed FreeBSD virtual machine.</para>

	  <mediaobject>
	    <imageobject>
	      <imagedata fileref="virtualization/parallels-freebsd13">
	    </imageobject>
	  </mediaobject>
	</sect3>

	<sect3 id="virtualization-guest-parallels-configure">
	  <title>Configuring FreeBSD on &macos; X/Parallels</title>

	  <para>After FreeBSD has been successfully installed on &macos;
	    X with <application>Parallels</application>, there are a number
	    of configuration steps that can be taken to optimize the system
	    for virtualized operation.</para>

          <procedure>
	    <step>
	      <title>Set boot loader variables</title>

	      <para>The most important step is to reduce the
	        <option>kern.hz</option> tunable to reduce the CPU utilization
		of FreeBSD under the <application>Parallels</application>
		environment.  This is accomplished by adding the following
		line to <filename>/boot/loader.conf</filename>:</para>

	  	<programlisting>kern.hz=100</programlisting>

	      <para>Without this setting, an idle FreeBSD
	        <application>Parallels</application> guest
		OS will use roughly 15% of the CPU of a single
		processor &imac;.  After this change the usage will be
		closer to a mere 5%.</para>
	    </step>

	    <step>
	      <title>Create a new kernel configuration file</title>

	      <para>You can remove all of the SCSI, FireWire, and USB
	        device drivers.  <application>Parallels</application>
		provides a virtual network
	        adapter used by the &man.ed.4; driver, so
	        all other network devices except for
	        &man.ed.4; and &man.miibus.4; can be
	        removed from the kernel.</para>
	    </step>

	    <step>
	      <title>Setup networking</title>

	      <para>The most basic networking setup involves simply
	        using DHCP to connect your virtual machine to the same
	        local area network as your host &mac;.  This can be
	        accomplished by adding
	        <literal>ifconfig_ed0="DHCP"</literal> to
	        <filename>/etc/rc.conf</filename>.  More advanced
		networking setups are described in <xref
		linkend="advanced-networking">.</para>
	    </step>
          </procedure>

      </sect3>

    </sect2>

    <sect2 id="virtualization-guest-xen">
      <sect2info>
	<authorgroup>
	  <author>
            <firstname>Fukang</firstname>
	    <surname>Chen (Loader)</surname>
	    <contrib>Contributed by </contrib>
          </author>
        </authorgroup>
        <!-- Mar/Apr 2007 -->
      </sect2info>

      <title>FreeBSD with &xen; on Linux</title>

	<para>The <application>&xen;</application> hypervisor is an open
	  source paravirtualization product which is now supported by the
	  commercial XenSource company.  Guest operating systems are known
	  as domU domains, and the host operating system is known as dom0.
	  The first step in running a virtual FreeBSD instance under Linux
	  is to install <application>&xen;</application> for Linux dom0.
	  The host operating system will be a Slackware Linux
	  distribution.</para>

	<sect3 id="xen-slackware-dom0">
	  <title>Setup &xen; 3 on Linux dom0</title>

	  <procedure>
	    <step>
	      <title>Download &xen; 3.0 from XenSource</title>

	      <para>Download <ulink
	        url="http://bits.xensource.com/oss-xen/release/3.0.4-1/src.tgz/xen-3.0.4_1-src.tgz">xen-3.0.4_1-src.tgz</ulink>
	        from <ulink url="http://www.xensource.com/"></ulink>.</para>

	    </step>

	    <step>
	      <title>Unpack the tarball</title>

              <screen>&prompt.root; <userinput>cd xen-3.0.4_1-src</userinput>
&prompt.root; <userinput>KERNELS="linux-2.6-xen0 linux-2.6-xenU" make world</userinput>
&prompt.root; <userinput>make install</userinput></screen>

            <note>
	      <para>To re-compile the kernel for dom0:</para>

	      <screen>&prompt.root; <userinput>cd xen-3.0.4_1-src/linux-2.6.16.33-xen0</userinput>
&prompt.root; <userinput>make menuconfig</userinput>
&prompt.root; <userinput>make</userinput>
&prompt.root; <userinput>make install</userinput></screen>

	      <para>Older version of <application>&xen;</application> may need to specify
	        <command>make ARCH=xen menuconfig</command></para>
	    </note>
	    </step>

	    <step>
	      <title>Add a menu entry into Grub menu.lst</title>

	      <para>Edit <filename>/boot/grub/menu.lst</filename> and
		add the following lines:</para>

	      <programlisting>title Xen-3.0.4
root (hd0,0)
kernel /boot/xen-3.0.4-1.gz dom0_mem=262144
module /boot/vmlinuz-2.6.16.33-xen0 root=/dev/hda1 ro</programlisting>
            </step>

            <step>
              <title>Reboot your computer into &xen;</title>

	      <para>First, edit
		<filename>/etc/xen/xend-config.sxp</filename>, and add
		the following line:</para>

	      <programlisting>(network-script 'network-bridge netdev=eth0')</programlisting>

	      <para>Then, we can launch
		<application>&xen;</application>:</para>

              <screen>&prompt.root; <userinput>/etc/init.d/xend start</userinput>
&prompt.root; <userinput>/etc/init.d/xendomains start</userinput></screen>

	      <para>Our dom0 is running:</para>

              <screen>&prompt.root; <userinput>xm list</userinput>
Name                                      ID   Mem VCPUs      State   Time(s)
Domain-0                                   0   256     1     r-----  54452.9</screen>
            </step>
          </procedure>
        </sect3>

        <sect3>
          <title>FreeBSD 7-CURRENT domU</title>

          <para>Download the FreeBSD domU kernel for <application>&xen; 3.0</application> and
	    disk image from <ulink
            url="http://www.fsmware.com/">http://www.fsmware.com/</ulink></para>

      <itemizedlist>
	<listitem>
	  <para><ulink url="http://www.fsmware.com/xenofreebsd/7.0/download/kernel-current">kernel-current</ulink></para>
	</listitem>

	<listitem>
	  <para><ulink url="http://www.fsmware.com/xenofreebsd/7.0/download/mdroot-7.0.bz2">mdroot-7.0.bz2</ulink></para>
	</listitem>

	<listitem>
	  <para><ulink url="http://www.fsmware.com/xenofreebsd/7.0/download/config/xmexample1.bsd">xmexample1.bsd</ulink></para>
	</listitem>
      </itemizedlist>

      <para>Put the configuration file <filename>xmexample1.bsd</filename>
	into <filename>/etc/xen/</filename> and modify the related
	entries about where the kernel and the disk image are stored.
	It should look like the following:</para>

      <programlisting>kernel = "/opt/kernel-current"
memory = 256
name = "freebsd"
vif = [ '' ]
disk = [ 'file:/opt/mdroot-7.0,hda1,w' ]
#on_crash    = 'preserve'
extra = "boot_verbose"
extra += ",boot_single"
extra += ",kern.hz=100"
extra += ",vfs.root.mountfrom=ufs:/dev/xbd769a"</programlisting>

      <para>The <filename>mdroot-7.0.bz2</filename> file should be 
	uncompressed.</para>

      <para>Next, the __xen_guest section in <filename>kernel-current</filename>
	needs to be altered to add the VIRT_BASE that
	<application>&xen; 3.0.3</application> requires:</para>

      <screen>&prompt.root; <userinput>objcopy kernel-current -R __xen_guest</userinput>
&prompt.root; <userinput>perl -e 'print "LOADER=generic,GUEST_OS=freebsd,GUEST_VER=7.0,XEN_VER=xen-3.0,BSD_SYMTAB,VIRT_BASE=0xC0000000\x00"' &gt; tmp</userinput>
&prompt.root; <userinput>objcopy kernel-current --add-section __xen_guest=tmp</userinput></screen>

      <screen>&prompt.root; <userinput>objdump -j __xen_guest -s kernel-current</userinput>

kernel-current:     file format elf32-i386

Contents of section __xen_guest:
 0000 4c4f4144 45523d67 656e6572 69632c47  LOADER=generic,G
 0010 55455354 5f4f533d 66726565 6273642c  UEST_OS=freebsd,
 0020 47554553 545f5645 523d372e 302c5845  GUEST_VER=7.0,XE
 0030 4e5f5645 523d7865 6e2d332e 302c4253  N_VER=xen-3.0,BS
 0040 445f5359 4d544142 2c564952 545f4241  D_SYMTAB,VIRT_BA
 0050 53453d30 78433030 30303030 3000      SE=0xC0000000. </screen>

      <para>We are, now, ready to create and launch our domU:</para>

      <screen>&prompt.root; <userinput>xm create /etc/xen/xmexample1.bsd -c</userinput>
Using config file "/etc/xen/xmexample1.bsd".
Started domain freebsd
WARNING: loader(8) metadata is missing!
Copyright (c) 1992-2006 The FreeBSD Project.
Copyright (c) 1979, 1980, 1983, 1986, 1988, 1989, 1991, 1992, 1993, 1994
The Regents of the University of California. All rights reserved.
FreeBSD 7.0-CURRENT #113: Wed Jan  4 06:25:43 UTC 2006
    kmacy@freebsd7.gateway.2wire.net:/usr/home/kmacy/p4/freebsd7_xen3/src/sys/i386-xen/compile/XENCONF
WARNING: DIAGNOSTIC option enabled, expect reduced performance.
Xen reported: 1796.927 MHz processor.
Timecounter "ixen" frequency 1796927000 Hz quality 0
CPU: Intel(R) Pentium(R) 4 CPU 1.80GHz (1796.93-MHz 686-class CPU)
  Origin = "GenuineIntel"  Id = 0xf29  Stepping = 9
  Features=0xbfebfbff&lt;FPU,VME,DE,PSE,TSC,MSR,PAE,MCE,CX8,APIC,SEP,MTRR,PGE,MCA,CMOV,PAT,PSE36,CLFLUSH,
  DTS,ACPI,MMX,FXSR,SSE,SSE2,SS,HTT,TM,PBE&gt;
  Features2=0x4400&lt;CNTX-ID,&lt;b14&gt;&gt;
real memory  = 265244672 (252 MB)
avail memory = 255963136 (244 MB)
xc0: &lt;Xen Console&gt; on motherboard
cpu0 on motherboard
Timecounters tick every 10.000 msec
[XEN] Initialising virtual ethernet driver.
xn0: Ethernet address: 00:16:3e:6b:de:3a
[XEN] 
Trying to mount root from ufs:/dev/xbd769a
WARNING: / was not properly dismounted
Loading configuration files.
No suitable dump device was found.
Entropy harvesting: interrupts ethernet point_to_point kickstart.
Starting file system checks:
/dev/xbd769a: 18859 files, 140370 used, 113473 free (10769 frags, 12838 blocks, 4.2% fragmentation)
Setting hostname: demo.freebsd.org.
lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 16384
	  inet6 ::1 prefixlen 128 
	  inet6 fe80::1%lo0 prefixlen 64 scopeid 0x2 
	  inet 127.0.0.1 netmask 0xff000000 
Additional routing options:.
Mounting NFS file systems:.
Starting syslogd.
/etc/rc: WARNING: Dump device does not exist.  Savecore not run.
ELF ldconfig path: /lib /usr/lib /usr/lib/compat /usr/X11R6/lib /usr/local/lib
a.out ldconfig path: /usr/lib/aout /usr/lib/compat/aout /usr/X11R6/lib/aout
Starting usbd.
usb: Kernel module not available: No such file or directory
Starting local daemons:.
Updating motd.
Starting sshd.
Initial i386 initialization:.
Additional ABI support: linux.
Starting cron.
Local package initialization:.
Additional TCP options:.
Starting background file system checks in 60 seconds.

Sun Apr  1 02:11:43 UTC 2007

FreeBSD/i386 (demo.freebsd.org) (xc0)

login: </screen>

      <para>The domU should run the &os;&nbsp;7.0-CURRENT
	kernel:</para>

      <screen>&prompt.root; <userinput>uname -a</userinput>
FreeBSD demo.freebsd.org 7.0-CURRENT FreeBSD 7.0-CURRENT #113: Wed Jan  4 06:25:43 UTC 2006     
kmacy@freebsd7.gateway.2wire.net:/usr/home/kmacy/p4/freebsd7_xen3/src/sys/i386-xen/compile/XENCONF  i386</screen>

      <para>The network can now be configured on the domU.  The &os;
	domU will use a specific interface called
	<devicename>xn0</devicename>:</para>

      <screen>&prompt.root; <userinput>ifconfig xn0 10.10.10.200 netmask 255.0.0.0</userinput>
&prompt.root; <userinput>ifconfig</userinput>
xn0: flags=843&lt;UP,BROADCAST,RUNNING,SIMPLEX&gt; mtu 1500
    inet 10.10.10.200 netmask 0xff000000 broadcast 10.255.255.255
    ether 00:16:3e:6b:de:3a
lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 16384
      inet6 ::1 prefixlen 128 
      inet6 fe80::1%lo0 prefixlen 64 scopeid 0x2 
      inet 127.0.0.1 netmask 0xff000000 </screen>

      <para>On dom0 Slackware, some <application>&xen;</application>
	dependant network interfaces should show up:</para>

      <screen>&prompt.root; <userinput>ifconfig</userinput>
eth0      Link encap:Ethernet  HWaddr 00:07:E9:A0:02:C2  
          inet addr:10.10.10.130  Bcast:0.0.0.0  Mask:255.0.0.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:815 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1400 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:204857 (200.0 KiB)  TX bytes:129915 (126.8 KiB)

lo        Link encap:Local Loopback  
          inet addr:127.0.0.1  Mask:255.0.0.0
          UP LOOPBACK RUNNING  MTU:16436  Metric:1
          RX packets:99 errors:0 dropped:0 overruns:0 frame:0
          TX packets:99 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:9744 (9.5 KiB)  TX bytes:9744 (9.5 KiB)

peth0     Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF  
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:1853349 errors:0 dropped:0 overruns:0 frame:0
          TX packets:952923 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:2432115831 (2.2 GiB)  TX bytes:86528526 (82.5 MiB)
          Base address:0xc000 Memory:ef020000-ef040000 

vif0.1    Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF  
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:1400 errors:0 dropped:0 overruns:0 frame:0
          TX packets:815 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:129915 (126.8 KiB)  TX bytes:204857 (200.0 KiB)

vif1.0    Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF  
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:3 errors:0 dropped:0 overruns:0 frame:0
          TX packets:2 errors:0 dropped:157 overruns:0 carrier:0
          collisions:0 txqueuelen:1 
          RX bytes:140 (140.0 b)  TX bytes:158 (158.0 b)

xenbr1    Link encap:Ethernet  HWaddr FE:FF:FF:FF:FF:FF  
          UP BROADCAST RUNNING NOARP  MTU:1500  Metric:1
          RX packets:4 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:112 (112.0 b)  TX bytes:0 (0.0 b)</screen>

      <screen>&prompt.root; <userinput>brctl show</userinput>
bridge name     bridge id           STP enabled         interfaces
xenbr1          8000.feffffffffff   no                  vif0.1
                                                        peth0
                                                        vif1.0</screen>
      </sect3>

    </sect2>

    <sect2 id="virtualization-guest-vmware">
      <title>VMware on &windows;/&mac;/&linux;</title>

      <para>This section has yet to be written.</para>

    </sect2>

  </sect1>

  <sect1 id="virtualization-host">
    <title>FreeBSD as a Host OS</title>

    <para>FreeBSD is not officially supported by any virtualization
      package as a host operating system at this time, but many people
      use older versions of <application>VMware</application> in this capacity.
      Work is also ongoing in getting <application>&xen;</application> to
      work as a host environment on FreeBSD.</para>

  </sect1>

</chapter>

<!-- 
     Local Variables:
     mode: sgml
     sgml-declaration: "../chapter.decl"
     sgml-indent-data: t
     sgml-omittag: nil
     sgml-always-quote-attributes: t
     sgml-parent-document: ("../book.sgml" "part" "chapter")
     End:
-->
